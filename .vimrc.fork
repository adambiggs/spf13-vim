" Use zsh as shell
set shell=/bin/zsh

" Override some spf13 defaults
set shiftwidth=2  " Use indents of 2 spaces
set tabstop=2     " An indentation every 2 columns
set softtabstop=2 " Let backspace delete indent

" User patched Powerline fonts
set guifont=Source\ Code\ Pro\ for\ Powerline:h13,Menlo\ Regular:h15

" JSON syntax settings
autocmd FileType json setlocal conceallevel=0 foldmethod=syntax foldlevel=1

" Custom snippet libraries
let g:neosnippet#snippets_directory = '~/.vim/bundle/coffeescript-vim-snippets'

" Indent Guides
let g:indent_guides_guide_size = 2
let g:indent_guides_start_level = 1

" Airline
let g:airline#extensions#tabline#enabled = 1                " Enable advanced tabline
let g:airline#extensions#tabline#buffer_nr_show = 1         " Show buffer numbers
let g:airline#extensions#tabline#formatter = 'unique_tail'  " Change the default display for file paths

" ControlP
let g:ctrlp_root_markers = ['Gruntfile.coffee']
let g:ctrlp_show_hidden = 1

" NERDTree
let NERDTreeShowLineNumbers = 1
let NERDTreeIgnore = ['\.pyc', '\~$', '\.swo$', '\.swp$', '\.git', '\.hg', '\.svn', '\.bzr', '\.map$', '.DS_Store']
let g:nerdtree_tabs_smart_startup_focus = 1

" CoffeeScript
autocmd FileType coffee setlocal foldmethod=indent foldlevel=2
autocmd FileType coffee autocmd BufWritePre <buffer> call StripTrailingWhitespace()
let coffee_compile_vert = 1 " Show compiled output in a vertical split

" TagBar
let g:tagbar_autoshowtag = 1      " Open folds if necessary when navigating to a tag
let g:tagbar_autofocus = 1        " Focus cursor inside tagbar when opened
let g:tagbar_show_linenumbers = 2 " Show relative line numbers
let g:tagbar_foldlevel = 1        " Custom fold level

" Markdown preview via Marked.app
function! s:setupMarkdownPreview()
  nnoremap <leader>md :silent !open -a Marked.app '%:p'<cr>
endfunction
autocmd BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn} call s:setupMarkdownPreview()


" EXTRA KEY MAPPINGS "

" Disable the default spf13 window resizing behavior
if !exists('g:spf13_no_easyWindows')
  map <C-J> <C-W>j
  map <C-K> <C-W>k
  map <C-L> <C-W>l
  map <C-H> <C-W>h
endif

" NextFile
"nmap <Leader>r <ESC>:call NextFile()<CR>

" Easier Esc
noremap <C-CR> <Esc>

" Insert new lines with Enter key
nmap <CR> o<Esc>
nmap <S-CR> O<Esc>

" Center cursor with spacebar in normal mode
nnoremap <Space> zz
